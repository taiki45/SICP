(provide #f)
(define (adjoin-set x set)
  (cond ((null? x) set)
        ((null? set) (cons x set))
        ((< x (car set)) (cons x set))
        ((null? (cdr set))
         (if (> x (car set))
           (cons (car set) (cons x '()))
           set))
        ((> x (car set))
         (cons (car set) (adjoin-set x (cdr set))))
        ((= x (car set)) set)))
